Write a query to calculate the average age of employees in each department.

select avg(e.age),d.id from e.name
leftjoin department d on e.employees=d.id;
group by d.id
order by e.age;

-- Write a query to find the department with the highest number of employees whose age is
above 40.

select d.id, e.age,e.id from name e
left join department d on e.departmentid=d.id 
where e.age >=40
group by e.name
order by d.name


-- Write a query to retrieve the count of employees who have in joined in last 100 days.

select count(name) from (select joining_date from employees where datedadd(quater,-1,get date)


-- Write a query to update the joining date of all employees in the HR department to the
yesterday.
-- Write a query to retrieve the count of employees who have in joined in last 100 days.

-- Create departments table
CREATE TABLE departments (
id INT 
AUTO INCREMENT PRIMARY KEY ,
name VARCHAR(100)
);
-- Insert sample data into departments table
INSERT INTO departments (name) VALUES
('IT'),
('HR'),
('Finance'),
('Marketing'),
('Operations');
-- Create employees table
CREATE TABLE employees (
id INT AUTO
INCREMENT PRIMARY KEY ,
_
name VARCHAR(100),
age INT ,
department
id INT ,
_
joining_
date DATE,
FOREIGN KEY (department
_
id) REFERENCES departments(id)
);
-- Insert sample data into employees table with 10000 employees
INSERT INTO employees (name, age, department
_
id, joining_
date)
SELECT
CONCAT('Employee'
, numbers.number),
25 + MOD((tens.a-1) * 10 + (hundreds.a-1) * 100 + numbers.number*numbers.number, 30),
1 + MOD((tens.a-1) * 10 + (hundreds.a-1) * 100 + numbers.number, 5),
-- department
-- age between 25 and 54
id between 1 and 5
_
DATE
_
SUB(CURDATE(), INTERVAL (tens.a-1) * 10 + (hundreds.a-1) * 100 + numbers.number DAY) -- joining_
date within the last year
FROM
(SELECT 1 AS number
UNION ALL SELECT 2
UNION ALL SELECT 3
UNION ALL SELECT 4
UNION ALL SELECT 5
UNION ALL SELECT 6
UNION ALL SELECT 7
UNION ALL SELECT 8
UNION ALL SELECT 9
UNION ALL SELECT 10) AS numbers
CROSS JOIN
(SELECT 1 AS a
UNION ALL SELECT 2
UNION ALL SELECT 3
UNION ALL SELECT 4
UNION ALL SELECT 5
UNION ALL SELECT 6
UNION ALL SELECT 7
UNION ALL SELECT 8
UNION ALL SELECT 9
UNION ALL SELECT 10) AS tens
CROSS JOIN
(SELECT 1 AS a
UNION ALL SELECT 2
UNION ALL SELECT 3
UNION ALL SELECT 4
UNION ALL SELECT 5
UNION ALL SELECT 6
UNION ALL SELECT 7
UNION ALL SELECT 8
UNION ALL SELECT 9
UNION ALL SELECT 10) AS hundreds;